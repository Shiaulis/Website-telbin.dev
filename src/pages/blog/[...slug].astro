---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';
import '../../styles/global.css';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<BaseLayout
	title={`${post.data.title} | Andrius Shiaulis`}
	description={post.data.description}
>
	<Navigation />
	<main>
		<article class="blog-post">
			<header class="post-header">
				<a href="/blog" class="back-link">
					<i class="fa-solid fa-arrow-left"></i> Back to Blog
				</a>
				<h1>{post.data.title}</h1>
				<p class="post-meta">
					<time datetime={post.data.pubDate.toISOString()}>
						{post.data.pubDate.toLocaleDateString('en-US', {
							year: 'numeric',
							month: 'long',
							day: 'numeric'
						})}
					</time>
					{post.data.updatedDate && (
						<span class="updated">
							(Updated: {post.data.updatedDate.toLocaleDateString('en-US', {
								year: 'numeric',
								month: 'long',
								day: 'numeric'
							})})
						</span>
					)}
				</p>
				{post.data.tags && post.data.tags.length > 0 && (
					<div class="post-tags">
						{post.data.tags.map((tag) => (
							<span class="tag">{tag}</span>
						))}
					</div>
				)}
			</header>

			<div class="post-content">
				<Content />
			</div>
		</article>
	</main>
	<Footer />
</BaseLayout>
